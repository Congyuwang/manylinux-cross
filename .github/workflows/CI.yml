on:
  push:
  pull_request:

name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [aarch64, armv7l]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          docker pull messense/manylinux2014-cross::${{ matrix.arch }} || true
          docker build -t messense/manylinux2014-cross:${{ matrix.arch }} -f ${{ matrix.arch }}.Dockerfile --cache-from messense/manylinux2014-cross:${{ matrix.arch }} .
      - name: Alias armv7l to armv7
        if: matrix.arch == 'armv7l'
        run: |
          docker tag messense/manylinux2014-cross:armv7l messense/manylinux2014-cross:armv7
      - name: Publish
        if: github.ref == 'refs/heads/master'
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push -a messense/manylinux2014-cross

  test:
    name: Test
    runs-on: ubuntu-latest
    # needs: [ build ]
    strategy:
      matrix:
        python: [
          { version: '3.6', abi: 'm' },
          { version: '3.7', abi: 'm' },
          { version: '3.8', abi: '' },
          { version: '3.9', abi: '' },
        ]
        platform: [
          { target: "aarch64-unknown-linux-gnu", arch: "aarch64" },
          { target: "armv7-unknown-linux-gnueabihf", arch: "armv7l" },
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Build Wheels
        run: |
          echo 'curl -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
          source ~/.cargo/env
          rustup target add ${{ matrix.platform.target }}
          export PYO3_CROSS_PYTHON_VERSION=${{ matrix.python.version }}
          PY_VER="${PYO3_CROSS_PYTHON_VERSION//./}"
          PY_ABI=${{ matrix.python.abi }}
          PY_TAG="cp$PY_VER-cp$PY_VER$PY_ABI"
          export PYO3_CROSS_LIB_DIR=/opt/python/$PY_TAG/lib
          maturin build -i "python$PYO3_CROSS_PYTHON_VERSION" --release --out dist --no-sdist --target ${{ matrix.platform.target }} -m pyo3-test/Cargo.toml
          ' > build-wheel.sh
          chmod +x build-wheel.sh

          docker run --rm -v "$PWD":/io -w /io messense/manylinux2014-cross:${{ matrix.platform.arch }} bash build-wheel.sh
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
